# This workflow will do a clean install of node and go dependencies, and run the CI scripts

name: Peer Calls CI

on:
  push:
    branches: [ github-actions ]
  pull_request:
    branches: []

jobs:
  nodejs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["12.x"]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run ci
    - name: Upload client-side artifacts
      uses: actions/upload-artifact@v1
      with:
        name: client-build
        path: build
  go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.14"]
    steps:
    - uses: actions/checkout@v2
    - name: Use Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2.0.3
      with:
        go-version: ${{ matrix.go-version }}
    - run: go test ./... -race -coverprofile=coverage.out
    - run: go tool cover -func=coverage.out
  release:
    runs-on: ubuntu-latest
    needs:
      - nodejs
      - go
    strategy:
      matrix:
        arch:
        - "GOOS=linux GOARCH=amd64 BINARY=peer-calls"
        - "GOOS=linux GOARCH=arm BINARY=peer-calls"
        - "GOOS=darwin GOARCH=amd64 BINARY=peer-calls"
        - "GOOS=windows GOARCH=amd64 BINARY=peer-calls.exe"
    steps:
    - uses: actions/checkout@v2
    - name: Download client-side artifacts
      uses: actions/download-artifact@v1
      with:
        name: client-build
    - run: go get -u github.com/gobuffalo/packr/packr
    - run: export ${{matrix.arch}}
    - run: mkdir -p build/$GOOS/$GOARCH
    - run: packr build -ldflags "-X main.gitDescribe=$(git describe --always --tags)" -o build/$GOOS/$GOARCH/$BINARY main.go
    - name: Release ${{ matrix.arch }}
      uses: actions/create-release@latest
      env:
        # This token is provided by Actions, you do not need to create your own token
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # if: startsWith(github.ref, 'refs/tags/v')
      if: ${{ github.ref == 'github-actions' }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Peer Calls v4 ${{ github.ref }}
        # body: |
        #   Changes in this Release
        #   - First Change
        #   - Second Change
        draft: false
        prerelease: true
